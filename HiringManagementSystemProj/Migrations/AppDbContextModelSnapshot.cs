// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HiringManagementSystemProj.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HiringManagementSystemProj.DbModels.Applicant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("CurrentCTC")
                        .HasColumnType("bigint");

                    b.Property<string>("CurrentEmployer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ExpectedCTC")
                        .HasColumnType("bigint");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("ResumeUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TechStack")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Applicants");
                });

            modelBuilder.Entity("HiringManagementSystemProj.DbModels.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<int>("AppliedFor")
                        .HasColumnType("int");

                    b.Property<DateTime>("AppliedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("AppliedFor");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("HiringManagementSystemProj.DbModels.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("HiringManagementSystemProj.DbModels.HiringPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("HiringPersons");
                });

            modelBuilder.Entity("HiringManagementSystemProj.DbModels.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ApplyBefore")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExpRequired")
                        .HasColumnType("int");

                    b.Property<int>("PostedBy")
                        .HasColumnType("int");

                    b.Property<long>("SalaryOffered")
                        .HasColumnType("bigint");

                    b.Property<string>("SkillsRequired")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PostedBy");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("HiringManagementSystemProj.DbModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HiringManagementSystemProj.DbModels.Applicant", b =>
                {
                    b.HasOne("HiringManagementSystemProj.DbModels.User", "User")
                        .WithOne("Applicant")
                        .HasForeignKey("HiringManagementSystemProj.DbModels.Applicant", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HiringManagementSystemProj.DbModels.Application", b =>
                {
                    b.HasOne("HiringManagementSystemProj.DbModels.Applicant", "Applicant")
                        .WithMany("Applications")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HiringManagementSystemProj.DbModels.Job", "Job")
                        .WithMany("Applications")
                        .HasForeignKey("AppliedFor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Applicant");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("HiringManagementSystemProj.DbModels.HiringPerson", b =>
                {
                    b.HasOne("HiringManagementSystemProj.DbModels.Company", "Company")
                        .WithMany("HiringPersons")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HiringManagementSystemProj.DbModels.User", "User")
                        .WithOne("HiringPerson")
                        .HasForeignKey("HiringManagementSystemProj.DbModels.HiringPerson", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HiringManagementSystemProj.DbModels.Job", b =>
                {
                    b.HasOne("HiringManagementSystemProj.DbModels.HiringPerson", "HiringPerson")
                        .WithMany("JobsPosted")
                        .HasForeignKey("PostedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HiringPerson");
                });

            modelBuilder.Entity("HiringManagementSystemProj.DbModels.Applicant", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("HiringManagementSystemProj.DbModels.Company", b =>
                {
                    b.Navigation("HiringPersons");
                });

            modelBuilder.Entity("HiringManagementSystemProj.DbModels.HiringPerson", b =>
                {
                    b.Navigation("JobsPosted");
                });

            modelBuilder.Entity("HiringManagementSystemProj.DbModels.Job", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("HiringManagementSystemProj.DbModels.User", b =>
                {
                    b.Navigation("Applicant")
                        .IsRequired();

                    b.Navigation("HiringPerson")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
